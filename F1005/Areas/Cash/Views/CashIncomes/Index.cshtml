@model IEnumerable<F1005.Models.CashIncome>

@{
	ViewBag.Title = "Index";
}

@*<h2>Index</h2>

	<p>
		@Html.ActionLink("Create New", "Create")
	</p>
	<table class="table">
		<tr>
			<th>
				@Html.DisplayNameFor(model => model.UserName)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.InCashType)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.InAmount)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.InDate)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.InNote)
			</th>
			<th>
				@Html.DisplayNameFor(model => model.SummaryTable.TradeType)
			</th>
			<th></th>
		</tr>

	@foreach (var item in Model) {
		<tr>
			<td>
				@Html.DisplayFor(modelItem => item.UserName)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.InCashType)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.InAmount)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.InDate)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.InNote)
			</td>
			<td>
				@Html.DisplayFor(modelItem => item.SummaryTable.TradeType)
			</td>
			<td>
				@Html.ActionLink("Edit", "Edit", new { id=item.InCashID }) |
				@Html.ActionLink("Details", "Details", new { id=item.InCashID }) |
				@Html.ActionLink("Delete", "Delete", new { id=item.InCashID })
			</td>
		</tr>
	}

	</table>*@


@*jsGrid Table*@
<div class="container" style="background-color:lavenderblush">
	<div class="jumbotron">
		<h2 style="font-family:'Microsoft JhengHei'"><i class="glyphicon glyphicon-th-list"></i>  現金收入明細表</h2>
	</div>
	<div id="jsGridIncome"></div>
	<div>
		<h2 id="IncomeBalance"></h2>
	</div>
</div>

@*現金收入統計圖*@
<div class="container" style="background-color:lavenderblush">
	<div class="jumbotron">
		<h2 style="font-family:'Microsoft JhengHei'"><i class="glyphicon glyphicon-stats"></i>  收入紀錄統計圖</h2>
	</div>
	<label>請選擇查詢月份:</label>@Html.DropDownList("Month", new SelectList(new[] { "1月", "2月", "3月", "4月", "5月", "6月", "7月", "8月", "9月", "10月", "11月", "12月" }), "---請選擇---", new { @class = "form-control", @onchange = "MonthChange()" });
	<div class="col-md-8 col-md-offset-2" id="xx">
		<canvas id="CashIncomeHis"></canvas>
	</div>
</div>

@*現金收入vs支出圓餅圖*@
<div class="container" style="background-color:lavenderblush">
	<div class="jumbotron">
		<h2 style="font-family:'Microsoft JhengHei'"><i class="glyphicon glyphicon-stats"></i>  資產分布百分比</h2>
	</div>
	<div class="row" style="height:350px">
		<div class="col-lg-6">
			<canvas id="Doughnut"></canvas>
		</div>
		@*Draw Pie*@
		<div class="col-lg-6">
			<canvas id="Pie"></canvas>
		</div>
	</div>
</div>


@section scripts{
	<script>
		$(function () {
			init();
			GetIncomeHis();
			LoadDoughnut();
			LoadPie();
			GetBalance();
		});

		function GetBalance() {
			$.ajax({
				type: "Get",
				url:"@Url.Action("GetIncomeBalance", "CashIncomes")"
			}).done(function (res) {
				document.getElementById("IncomeBalance").innerHTML = "<h2>" + " 目前總收入:  " + res + "</h2>";
				document.getElementById("IncomeBalance").setAttribute("class", "text-right text-success");
			})
		};


		function init() {
				$.ajax({
					type: "Get",
					url: "@Url.Action("GetAllIncome", "CashIncomes")",
				}).done(function (res) {
					var MyDateField = function (config) {
						jsGrid.Field.call(this, config);
				};
					MyDateField.prototype = new jsGrid.Field({

						css: "date-field",            // redefine general property 'css'
						align: "center",              // redefine general property 'align'
						myCustomProperty: "foo",      // custom property

						sorter: function (date1, date2) {
							return new Date(date1) - new Date(date2);
						},

						itemTemplate: function (value) {
							return new Date(value).toDateString();
						},

						insertTemplate: function (value) {
							return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
						},

						editTemplate: function (value) {
							return this._editPicker = $("<input>").datepicker().datepicker("setDate", new Date(value));
						},

						insertValue: function () {
							return this._insertPicker.datepicker("getDate").toISOString();
						},

						editValue: function () {
							return this._editPicker.datepicker("getDate").toISOString();
						}
					});

					jsGrid.fields.date = MyDateField;
					var filter = $("#grid").jsGrid("getFilter");

					var Ttype = [
						{ Name: "---請選擇---", Id:0},
						{ Name: "現金", Id: 1 },
						{ Name: "股票", Id: 2 },
						{ Name: "外匯", Id: 3 },
						{ Name: "基金", Id: 4 },
						{ Name: "儲蓄險", Id: 5 }
					];

					$("#jsGridIncome").jsGrid({
						width: "100%",
						height: "400px",

						//filtering: true,
						inserting: true,
						editing: true,
						sorting: true,
						paging: true,
						autoload: true,
						pageSize: 5,
						pageButtonCount: 5,
						deleteConfirm: "確定要刪除這筆資料?",
						pagerFormat: "頁數: {first} {prev} {pages} {next} {last}    {pageIndex} 之 {pageCount}",
						pagePrevText: "上一頁",
						pageNextText: "下一頁",
						pageFirstText: "第一頁",
						pageLastText: "最終頁",
						noDataContent: "目前沒有紀錄",

						data: res,

						controller: {
							loadData: function (filter) {
								return $.ajax({
									type: "GET",
									url: "@Url.Action("GetAllIncome", "CashIncomes")",
									data: filter
								});
							},

							insertItem: function (item) {
								return $.ajax({
									type: "POST",
									url: "@Url.Action("InsertIncome", "CashIncomes")",
									data: item
								}).done(function () {
									$("#jsGridIncome").jsGrid("loadData");
									$('#xxx').notify("新增成功", "success", {position:"bottom"});
									GetIncomeHis();
									LoadDoughnut();
									LoadPie();
									GetBalance();
								})
							},

							updateItem: function (item) {
								return $.ajax({
									type: "PUT",
									url: "@Url.Action("EditIncome", "CashIncomes")",
									data: item
								}).done(function () {
									$("#jsGridIncome").jsGrid("loadData");
									$('#xxx').notify("修改成功", "success", { position: "bottom" });
									GetIncomeHis();
									LoadDoughnut();
									LoadPie();
									GetBalance();
								});
							},

							deleteItem: function (item) {
								var id = item.InCashID;
								return $.ajax({
									type: "Delete",
									url: "@Url.Action("DeleteIncome", "CashIncomes")/" + id,
									data: item
								}).done(function (res) {
									$("#jsGridIncome").jsGrid("loadData");
									$('#xxx').notify("刪除成功", "success", { position: "bottom" });
									GetIncomeHis();
									LoadDoughnut();
									LoadPie();
									GetBalance();
								});
							},
						},

						fields: [
							{ name: "InCashID", type: "text", title: "交易序號", width: 100, inserting: false },
							{ name: "UserName", type: "text", title: "使用者代號", width: 100 },
							{ name: "InCashType", type: "select", title: "交易類別", width: 100, items: Ttype, valueField: "Id", textField: "Name" },
							{ name: "InAmount", type: "text", title: "收入金額", width: 100 },
							{ name: "InDate", type: "date", title: "日期", width: 100 },
							{ name: "InNote", type: "text", title: "我的筆記", width: 100, sorting: false },
							{ type: "control" }
						],

					});
				}).fail(function (err) {
					alert("Error");
				});



		};//init tail

		//Clear DateCash
		//function ClearDateCash() {
		//	$('#CashIncomeHis').remove();
		//	$('#xx').append('<canvas id="CashIncomeHis"></canvas>');
		//};

		//Draw Date Cash
        function GetIncomeHis() {
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetIncomeHis", "CashIncomes")",
            data: null,
            dataType: "json",
            success: function (response) {
                var MyDate = [];
                var MyAmount = [];
                for (var i = 0; i <= response.length - 1; i++) {
                    MyDate.push(response[i].MyDate);
                    MyAmount.push(response[i].Amount)
                };
				var ctx = document.getElementById("CashIncomeHis").getContext("2d");
                var myBarChart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: MyDate,
                        datasets: [{
							label: "現金收入歷史紀錄",
                            data: MyAmount,
                            backgroundColor: [
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
                                'rgba(54, 162, 235, 0.2)',
								'rgba(54, 162, 235, 0.2)',
								'rgba(54, 162, 235, 0.2)',
								'rgba(54, 162, 235, 0.2)',
                            ],
                            borderColor: [
                                'rgba(54, 162, 235, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(54, 162, 235, 1)',
                                'rgba(54, 162, 235, 1)',
								'rgba(54, 162, 235, 1)',
								'rgba(54, 162, 235, 1)',
								'rgba(54, 162, 235, 1)',
                            ],
                            borderWidth:2
                        }]
                    },
                    options: {
                        scales: {
                            yAxes: [
                                {
                                    ticks: { beginAtZero: true }
                                }],
                        }
                    }
                });
            }
        });
		}

		//資產分布百分比甜甜圈
        //Draw Doughnut
        function LoadDoughnut() {
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetPie", "CashIncomes")",
            data: null,
            dataType: "json",
            success: function (response) {
				var ctxDoughnut = document.getElementById("Doughnut");
                var DoughnutChart = new Chart(ctxDoughnut, {
                    type: 'doughnut',
                    data: {
                        labels: ["收入百分比","支出百分比"],
                        datasets: [{
							data: [response.IncomeP,response.ExpenseP],
                            backgroundColor: [
                                window.chartColors.blue,
                                window.chartColors.red,
                            ]
                        }],
                    },
                    options: {
                        responsive: true,
                        title: {
                            display: true,
                            fontSize: 26,
                            text: '資產分布%'
                        },
                    }
                })
            }
          });
        };

        //資產分布百分比圓餅圖
        //Draw Pie
        function LoadPie() {
        $.ajax({
            type: "Get",
            url: "@Url.Action("GetPie", "CashIncomes")",
            data: null,
            dataType: "json",
            success: function (response) {
				var ctxDoughnut = document.getElementById("Pie");
                var DoughnutChart = new Chart(ctxDoughnut, {
                    type: 'pie',
                    data: {
						labels: ["收入百分比", "支出百分比"],
                        datasets: [{
							data: [response.IncomeP, response.ExpenseP],
                            backgroundColor: [
                                window.chartColors.blue,
                                window.chartColors.red,
                            ]
                        }],
                    },
                    options: {
                        responsive: true,
                        title: {
                            display: true,
                            fontSize: 26,
                            text: '資產分布%'
                        },
                    }
                })
            }
        });
      };


	</script>
}